{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/addflight/addflight.component.ts","webpack:///src/app/components/addflight/addflight.component.html","webpack:///src/app/components/editflight/editflight.component.ts","webpack:///src/app/components/editflight/editflight.component.html","webpack:///src/app/components/flight-list/flight-list.component.ts","webpack:///src/app/components/flight-list/flight-list.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/nav/nav.component.ts","webpack:///src/app/components/nav/nav.component.html","webpack:///src/app/services/flightdata.service.ts","webpack:///src/app/util.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutComponent","styles","min","max","AddflightComponent","flightService","error","submitted","util","validReqs","errMessages","flightData","flight_no","airline","trip_type","departure_airport","arrival_airport","departure_date","getTodayDate","return_date","getAllFlights","subscribe","data","gFlightData","field1","field2","event","target","name","value","idExists","sameAirportError","toUpperCase","datesError","replace","m","preventDefault","Object","forEach","key","trim","validateForm","addFlight","validObj","obj","action","validateAll","EditflightComponent","route","paramMap","params","get","getFlight","form","reset","disabled","required","minLength","maxLength","controls","errors","updateFlight","console","log","FlightListComponent","show","count","active","reloadData","flights","length","deleteFlight","parseInt","deleteAll","FooterComponent","HomeComponent","NavComponent","navMenus","FlightdataService","http","newFlight","post","put","providedIn","Util","idError","flight_noError","airlineError","departure_airportError","arrival_airportError","departure_dateError","return_dateError","val","validateId","validateFlightNo","validateAirline","validateDepartureAirport","validateArrivalAirport","validateSameAirports","validateDepartureDate","validateReturnDate","vaildateInvalidDates","values","map","indexOf","Date","today","toISOString","substring","environment","production","api","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FlightListComponent } from './components/flight-list/flight-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AddflightComponent } from './components/addflight/addflight.component';\nimport { EditflightComponent } from './components/editflight/editflight.component';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'home', component: HomeComponent},\n  {path:'about', component: AboutComponent},\n  {path:'add', component: AddflightComponent},\n  {path: \"flights\", component: FlightListComponent},\n  {path: \"edit/:id\", component: EditflightComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","\n<app-nav></app-nav>\n<div class=\"container\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavComponent } from './components/nav/nav.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { FlightListComponent } from './components/flight-list/flight-list.component';\nimport { AddflightComponent } from './components/addflight/addflight.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { EditflightComponent } from './components/editflight/editflight.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    FlightListComponent,\n    NavComponent,\n    AddflightComponent,\n    HomeComponent,\n    AboutComponent,\n    EditflightComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styles: []\n})\nexport class AboutComponent {\n\n}\n","<div class=\"row mb-5\">\n    <h1 class=\"text-center\">About Flight App</h1>\n    <div class=\"col-md-12 bg-light border p-4 bg-light rounded\">\n        <p class=\"text-left\">Flight App is a project used for the Full-Stack Web Dev Certificate.</p>\n        <p class=\"text-left\">\n            TypeScript and Python top RedMonk's recent rankings of programming languages, based on data from GitHub\n            and Stack Overflow.\n        </p>\n        <p class=\"text-left\">\n            One thing that can help you with your coding career is knowing which programming languages are the most\n            popular--though they may or may not be the right ones for you to know. In fact, it may help you position\n            yourself better as an expert if you know one that isn't popular; or, you may just want to know how to\n            code in the popular ones to expose yourself to the most jobs.\n        </p>\n        <p class=\"text-left\">\n            RedMonk analyzes GitHub and Stack Overflow to figure out what the popular programming languages are.\n            Here are five notable programming languages.\n        </p>\n        <p class=\"text-left\">\n            SEE: Implementing DevOps: A guide for IT pros (free PDF) (TechRepublic)\n        </p>\n        <div class=\"text-left\">\n            <ul>\n\n                <li>\n                    Microsoft-maintained TypeScript. Starting in June, it became the first new language to enter the\n                    top 10 and stay there for more than a quarter since 2014. TypeScript works well with the\n                    existing JavaScript codebase with the potential to make safer code.</li>\n                <li>\n                    Python. It's always been in the top five, but in the last year it has risen toward the top. It's\n                    generally considered versatile and easy to use.\n                </li>\n                <li>\n                    R. It rose two slots to the 13th most popular on RedMonk's list, and you probably haven't heard\n                    of it--unless you operate on data. RedMonk calls it \"an example of the power of an\n                    academia-supported community to elevate a language beyond its expected threshold.\"</li>\n                <li>\n                    Dart. Or should we say Flutter? Because the Dart language took off along with the popularity of\n                    the Flutter UI toolkit that went 1.0 a year ago.\n                </li>\n                <li>\n                    Kotlin. This language is popular with Android developers and seems to be holding onto that\n                    popularity in the face of competition from other languages used to run software on the Java\n                    Virtual Machine, like Clojure, Scala, and even Groovy.\n                    It's not what you know, it's… well, with programming, it really is largely what you know and\n                    hopefully this list will help you understand a few more of the options.\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IFlightData } from 'src/app/services/flightdata.interface';\nimport { FlightdataService } from 'src/app/services/flightdata.service';\nimport { Util } from '../../util'; \n\n@Component({\n  selector: 'app-addflight',\n  templateUrl: './addflight.component.html',\n  styles: []\n})\nexport class AddflightComponent implements OnInit{\n\n  // Inject Flightdata Service\n  constructor(private flightService: FlightdataService) { }\n\n  /**\n   * Lifecycle hook\n   */\n  ngOnInit(): void {\n    this.flightService.getAllFlights().subscribe(data => this.gFlightData=data);\n  }\n  \n  error = false;  // Form control error flag\n  submitted = false;  // Successful form submission flag\n  \n  gFlightData!: IFlightData; // = this.flightService.flightData; // Global flight data\n\n  util = new Util();\n  validReqs = this.util.validReqs;  // Validation requirements\n  errMessages = this.util.errMessages; // Error messages\n\n  // The new FlightData (default data)\n  flightData = {\n    id: 1,\n    flight_no: \"\",\n    airline: \"\",\n    trip_type: \"One Way\",\n    departure_airport: \"\",\n    arrival_airport: \"\",\n    departure_date: this.util.getTodayDate(),\n    return_date: \"\",\n  };\n\n  /**\n   * Check for field validity and assign is-invalid class to host element\n   * @param field1 \n   * @param field2 \n   */\n  isValid(field1, field2 = null) {\n    return (\n        this.validReqs[field1].error || this.validReqs[field2] \n        ? \"form-control is-invalid\" \n        : \"form-control\"\n    )\n  }\n\n  /**\n   * Handle keypress event\n   * @param event \n   */\n  handleChange(event) {\n    this.error = false;\n    this.submitted = false;\n    let { name, value } = event.target;\n    this.validReqs[name].error = false;\n\n    // Remove idExists error message for id field\n    if (name === 'id'){\n      this.validReqs.idExists = null;\n    }\n    \n    // Uppercase all airport names and remove sameAirportError message\n    if (name === 'departure_airport' || name === 'arrival_airport'){\n      this.validReqs.sameAirportError = null;\n      value = value.toUpperCase();\n    }\n\n    // Remove datesError message\n    if (name === 'departure_date' || name === 'return_date'){\n      this.validReqs.datesError = null;\n    }\n\n    // Uppercase flight number\n    if (name === 'flight_no'){\n        value = value.toUpperCase();\n    }\n\n    // Capitalize first letter of each word of airline name\n    if (name === 'airline'){\n        value = value.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase());\n    }\n\n    this.flightData[name] = value;\n  }\n\n   /**\n   * Handle form submission\n   * @param event \n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Trim whitespaces\n    let keys = Object.keys(this.flightData);\n    keys.forEach(key => {\n      if (key === 'id')\n        this.flightData[key] = this.flightData[key];\n      else\n        this.flightData[key] = this.flightData[key].trim();\n    });\n\n    this.validateForm();\n\n    if (!this.error) {\n      this.flightService.addFlight(this.flightData);\n      this.submitted = true;\n    } \n  }\n\n  /**\n   * Validate form control\n   */\n  validateForm() {\n    this.error = false;\n    let validObj = null;\n\n    // Object of data required for validator function\n    let obj = {\n      data: this.flightData, \n      flightData:this.gFlightData, \n      validReqs:this.validReqs, \n      errMessages:this.errMessages, \n      error:this.error, \n      action:'add'\n    }\n    \n    // Validate all requirements\n    validObj = this.util.validateAll(obj)\n\n    // Update the error flag and validReqs object        \n    this.error = validObj.error;\n    this.validReqs = validObj.validReqs;\n\n    {\n    //###### NOT NEEDED - USING UTIL FUNCTIONS ##########################\n    // this.error = false;\n    // let data = this.flightData;\n\n    // // Extract the values for all id fields from full data set\n    // let values = this.gFlightData.map(e => e.id);\n\n    // // Check for unique id - if exists then try again\n    // if (values.indexOf(data.id) !== -1) {\n    //   this.validReqs.idExists = this.errMessages.idExists;\n    //   this.error = true;\n    // }\n\n    // // Check if id is within number range\n    // if (data.id < 1) {\n    //   this.validReqs.id.error = this.errMessages.idError;\n    //   this.error = true;\n    // }\n\n    // // Check if Flight No is within character range\n    // if (data.flight_no.length < 5) {\n    //   this.validReqs.flight_no.error = this.errMessages.flight_noError;\n    //   this.error = true;\n    // }\n\n    // // Check if Airline is within character range\n    // if (data.airline.length < 2) {\n    //   this.validReqs.airline.error = this.errMessages.airlineError;\n    //   this.error = true;\n    // }\n\n    // // Check if Departure Airport is within character range\n    // if (data.departure_airport.length < 2) {\n    //   this.validReqs.departure_airport.error = this.errMessages.departure_airportError;\n    //   this.error = true;\n    // }\n\n    // // Check if Arrival Airport is within character range\n    // if (data.arrival_airport.length < 2) {\n    //   this.validReqs.arrival_airport.error = this.errMessages.arrival_airportError;\n    //   this.error = true;\n    // }\n\n    // // Check if airports are same\n    // if (data.departure_airport !== '' && data.departure_airport === data.arrival_airport) {\n    //   this.validReqs.sameAirportError = this.errMessages.sameAirportError;\n    //   this.error = true;\n    // }\n\n    // // Check if Departure Date is valid\n    // if (data.departure_date.length === 0) {\n    //   this.validReqs.departure_date.error = this.errMessages.departure_dateError;\n    //   this.error = true;\n    // }\n    // // Check if Return Date is valid\n    // if (data.return_date.length === 0) {\n    //   this.validReqs.return_date.error = this.errMessages.return_dateError;\n    //   this.error = true;\n    // }\n\n    // // Convert date strings to Date\n    // // Check if Departure Date is after Return Date\n    // if (new Date(data.departure_date) > new Date(data.return_date)) {\n    //   this.validReqs.datesError = this.errMessages.datesError;\n    //   this.error = true;\n    // }\n  }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-5\">\n        <h1 class=\"text-left\">Add Flight Schedule</h1>\n        <div class=\"table-responsive border p-4 bg-light rounded\">\n            <p class=\"text-left font-weight-bold\">Active Flight Schedule</p>\n            <ng-container *ngIf=\"submitted\">\n                <p class=\"text-center alert alert-success p-2 rounded\">\n                    Successfully Added!\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"error\">\n                <p class=\"text-center alert alert-danger p-2 rounded\">\n                    Sorry, something went wrong!\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"!submitted\">\n                <form #flightDataForm=\"ngForm\">\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Id:\n                                <ng-container *ngIf=\"validReqs.id.required\">*</ng-container>\n                            </label>\n                            <input name=\"id\" [class]=\"isValid('id', 'idExists')\" type=\"number\" min={{validReqs.id.min}}\n                                max={{validReqs.id.max}} #id=\"ngModel\" [(ngModel)]=\"flightData.id\"\n                                (keyup)=\"handleChange($event)\" required />\n\n                            <div class=\"invalid-feedback\"\n                                *ngIf=\"validReqs.id.error || id.errors?.required || id.errors?.minlength\">\n                                {{validReqs.id.error}}\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"validReqs.idExists\">\n                                {{validReqs.idExists}}\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Flight No:\n                                <ng-container *ngIf=\"validReqs.flight_no.required\">*</ng-container>\n                            </label>\n                            <input name=\"flight_no\" [style.textTransform]=\"'uppercase'\" class=\"{{isValid('flight_no')}}\"\n                                maxLength={validReqs.flight_no.max} #flight_no=\"ngModel\"\n                                [(ngModel)]=\"flightData.flight_no\" (keyup)=\"handleChange($event)\" required />\n\n                            <div class=\"invalid-feedback\"\n                                *ngIf=\"validReqs.flight_no.error || flight_no.errors?.required || flight_no.errors?.minlength\">\n                                {{validReqs.flight_no.error}}\n                            </div>\n\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Airline:\n                                <ng-container *ngIf=\"validReqs.airline.required\">*</ng-container>\n                            </label>\n                            <input name=\"airline\" style=\"text-transform:capitalize\" [class]=\"isValid('airline')\"\n                                maxLength={{validReqs.airline.max}} #airline=\"ngModel\" [(ngModel)]=\"flightData.airline\"\n                                (keyup)=\"handleChange($event)\" required />\n\n                            <div class=\"invalid-feedback\"\n                                *ngIf=\"validReqs.airline.error || airline.errors?.required || airline.errors?.minlength\">\n                                {{validReqs.airline.error}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Trip Type:\n                                <ng-container *ngIf=\"validReqs.trip_type.required\">*</ng-container>\n                            </label>\n                            <select name=\"trip_type\" (change)=\"handleChange($event)\" class=\"form-control\" #trip_type=\"ngModel\"\n                                [(ngModel)]=\"flightData.trip_type\">\n                                <option>One Way</option>\n                                <option>Round Trip</option>\n                                <option value=\"Multi\">Multiple Destinations</option>\n                            </select>\n                        </div>\n\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Departure Airport:\n                                <ng-container *ngIf=\"validReqs.departure_airport.required\">*</ng-container>\n                            </label>\n\n                            <input name=\"departure_airport\" [style.textTransform]=\"'uppercase'\"\n                                [class]=\"isValid('departure_airport')\" maxLength={{validReqs.departure_airport.max}}\n                                #departure_airport=\"ngModel\" [(ngModel)]=\"flightData.departure_airport\"\n                                (keyup)=\"handleChange($event)\" required />\n\n                            <div class=\"invalid-feedback\"\n                                *ngIf=\"validReqs.departure_airport.error || departure_airport.errors?.required || departure_airport.errors?.minlength\">\n                                {{validReqs.departure_airport.error}}\n                            </div>\n\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Arrival Airport:\n                                <ng-container *ngIf=\"validReqs.arrival_airport.required\">*</ng-container>\n                            </label>\n                            <input name=\"arrival_airport\" [style.textTransform]=\"'uppercase'\"\n                                [class]=\"isValid('arrival_airport','sameAirportError')\"\n                                maxLength={validReqs.arrival_airport.max} #arrival_airport=\"ngModel\"\n                                [(ngModel)]=\"flightData.arrival_airport\" (keyup)=\"handleChange($event)\" required />\n                         \n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.arrival_airport.error || arrival_airport.errors?.required || arrival_airport.errors?.minlength\">\n                                    {{validReqs.arrival_airport.error}}\n                                </div>\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.sameAirportError\">\n                                    {{validReqs.sameAirportError}}\n                                </div>\n\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Departure Date:\n                                <ng-container *ngIf=\"validReqs.departure_date.required\">*</ng-container>\n                            </label>\n                            <input type=\"date\" name=\"departure_date\" [class]=\"isValid('departure_date')\"\n                                #departure_date=\"ngModel\" [(ngModel)]=\"flightData.departure_date\"\n                                (keyup)=\"handleChange($event)\" (change)=\"handleChange($event)\" required />\n\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.departure_date.error || departure_date.errors?.required || departure_date.errors?.minlength\">\n                                    {{validReqs.departure_date.error}}\n                                </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Return Date:\n                                <ng-container *ngIf=\"validReqs.return_date.required\">*</ng-container>\n                            </label>\n                            <input type=\"date\" name=\"return_date\" [class]=\"isValid('return_date','datesError')\"\n                                #return_date=\"ngModel\" [(ngModel)]=\"flightData.return_date\"\n                                (keyup)=\"handleChange($event)\" (change)=\"handleChange($event)\" required />\n\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.return_date.error || return_date.errors?.required || return_date.errors?.minlength\">\n                                    {{validReqs.return_date.error}}\n                                </div>\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.datesError\">\n                                    {{validReqs.datesError}}\n                                </div>\n                        </div>\n                    </div>\n\n                    <button (click)=\"handleSubmit($event)\" class=\"btn btn-primary btn-just-icon btn-lg\">\n                        Submit\n                    </button>\n                </form>\n            </ng-container>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FlightdataService } from 'src/app/services/flightdata.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Util } from '../../util';\nimport { IFlightData } from '../../services/flightdata.interface';\n\n@Component({\n  selector: 'app-editflight',\n  templateUrl: './editflight.component.html',\n  styles: []\n})\nexport class EditflightComponent implements OnInit {\n\n  error = false;      // Form control error flag\n  submitted = false;  // Successful form submission flag\n  id = null;          // The flight_id of record to edit\n\n  // gFlightData = this.flightService.flightData;  // flight data service\n  gFlightData: IFlightData;\n  flightData: IFlightData;                      // The new FlightData\n  form: FormGroup;                              // FormGroup name\n\n  util = new Util();\n  validReqs = this.util.validReqs;     // Validation requirements\n  errMessages = this.util.errMessages; // Error messages\n\n  // Inject Flightdata Service and ActivatedRoute\n  constructor(private flightService: FlightdataService, private route: ActivatedRoute) { }\n\n  /**\n   * Lifecycle hook\n   */\n  ngOnInit(): void {\n    // Get the ID from URL parameter using snapshot\n    //this.id = parseInt(this.route.snapshot.paramMap.get('id'));\n\n    // Get the index from the flight data service\n    //let index = this.gFlightData.findIndex( e => e.id === parseInt(this.id));\n\n    // Clone the object to block direct reference to flight service\n    //this.flightData = Object.assign({},this.gFlightData[index]);\n    this.route.paramMap.subscribe(params => this.id = params.get('id'));\n    this.flightService.getFlight(this.id).subscribe(data => {\n      this.flightData = data;\n      this.form.reset({\n        id: this.flightData.id,\n        flight_no: this.flightData.flight_no,\n        airline: this.flightData.airline,\n        trip_type: this.flightData.trip_type,\n        departure_airport: this.flightData.departure_airport,\n        arrival_airport: this.flightData.arrival_airport,\n        departure_date: this.flightData.departure_date,\n        return_date: this.flightData.return_date\n      })\n    });\n\n    this.flightService.getAllFlights().subscribe(data => this.gFlightData = data);\n\n    // The main form group and form controls\n    this.form = new FormGroup({\n      id: new FormControl({ value: '', disabled: true }),\n      flight_no: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(7)]),\n      airline: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]),\n      trip_type: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]),\n      departure_airport: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(5)]),\n      arrival_airport: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(5)]),\n      departure_date: new FormControl(this.util.getTodayDate(), [Validators.required]),\n      return_date: new FormControl(this.util.getTodayDate(), [Validators.required]),\n    });\n  }\n\n  /**\n   * Check for field validity and assign is-invalid class to host element\n   * @param field1 \n   * @param field2 \n   */\n  isValid(field1, field2 = null) {\n    return (\n      this.form.controls[field1].errors?.required ||\n        this.form.controls[field1].errors?.minLength ||\n        this.validReqs[field1].error ||\n        this.validReqs[field2]\n        ? \"form-control is-invalid\"\n        : \"form-control\"\n    )\n  }\n\n  /**\n   * Handle keypress event\n   * @param event \n   */\n  handleChange(event) {\n    this.error = false;\n    this.submitted = false;\n    let { name, value } = event.target;\n    this.validReqs[name].error = false;\n\n    //##### NOT NEEDED - DISABLED FIELD ##########\n    // Remove idExists error message for id field\n    // if (name === 'id') {\n    //   this.validReqs.idExists = null;\n    //   value = parseInt(value);\n    // }\n\n    // Uppercase all airport names\n    if (name === 'departure_airport' || name === 'arrival_airport') {\n      this.validReqs.sameAirportError = null;\n      value = value.toUpperCase();\n    }\n\n    if (name === 'departure_date' || name === 'return_date') {\n      this.validReqs.datesError = null;\n    }\n\n    // Uppercase flight number\n    if (name === 'flight_no') {\n      value = value.toUpperCase();\n    }\n\n    // Capitalize first letter of each word of airline name\n    if (name === 'airline') {\n      value = value.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase());\n    }\n\n    this.flightData[name] = value;\n  }\n\n  /**\n   * Handle form submission\n   * @param event \n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Trim whitespaces\n    let keys = Object.keys(this.flightData);\n    keys.forEach(key => {\n      if (key === 'id'){\n        //this.flightData[key] = this.flightData[key];\n      }\n      else\n        this.flightData[key] = this.flightData[key].trim();\n    });\n\n    this.validateForm();\n\n    if (!this.error) {\n      this.flightService.updateFlight(this.id, this.flightData)\n        .subscribe(data => {\n          this.submitted = true;\n          console.log(data);\n        });\n    }\n\n  }\n\n  /**\n   * Validate form control\n   */\n  validateForm() {\n    this.error = false;\n    let validObj = null;\n\n    // Object of data required for validator function\n    let obj = {\n      data: this.flightData,\n      flightData: this.gFlightData,\n      validReqs: this.validReqs,\n      errMessages: this.errMessages,\n      error: this.error,\n      id: this.id,\n      action: 'edit'\n    }\n\n    // Validate all requirements\n    validObj = this.util.validateAll(obj)\n\n    // Update the error flag and validReqs object\n    this.error = validObj.error;\n    this.validReqs = validObj.validReqs;\n\n    //###### NOT NEEDED - USING UTIL FUNCTIONS ##########################\n    // if (this.id !== obj.data.id) {\n    //   // Check for unique id - if exists then try again\n    //   if (values.indexOf(obj.data.id) !== -1) {\n    //     this.validReqs.idExists = this.errMessages.idExists;\n    //     this.error = true;\n    //   }\n\n    //   // Check if id is within number range\n    //   if (obj.data.id < 1) {\n    //     this.validReqs.id.error = this.errMessages.idError;\n    //     this.error = true;\n    //   }\n    // }\n\n    // //  Check if Flight No is within character range\n    // if (obj.data.flight_no.length < 5) {\n    //   this.validReqs.flight_no.error = this.errMessages.flight_noError;\n    //   this.error = true;\n    // }\n\n    // // Check if Airline is within character range\n    // if (obj.data.airline.length < 2) {\n    //   this.validReqs.airline.error = this.errMessages.airlineError;\n    //   this.error = true;\n    // }\n\n    // // Check if Departure Airport is within character range\n    // if (obj.data.departure_airport.length < 2) {\n    //   this.validReqs.departure_airport.error = this.errMessages.departure_airportError;\n    //   this.error = true;\n    // }\n\n    // // Check if Arrival Airport is within character range\n    // if (obj.data.arrival_airport.length < 2) {\n    //   this.validReqs.arrival_airport.error = this.errMessages.arrival_airportError;\n    //   this.error = true;\n    // }\n\n    // // Check if airports are same\n    // if (obj.data.departure_airport !== '' && obj.data.departure_airport === obj.data.arrival_airport) {\n    //   this.validReqs.sameAirportError = this.errMessages.sameAirportError;\n    //   this.error = true;\n    // }\n\n    // // Check if Departure Date is valid\n    // if (obj.data.departure_date.length === 0) {\n    //   this.validReqs.departure_date.error = this.errMessages.departure_dateError;\n    //   this.error = true;\n    // }\n    // // Check if Return Date is valid\n    // if (obj.data.return_date.length === 0) {\n    //   this.validReqs.return_date.error = this.errMessages.return_dateError;\n    //   this.error = true;\n    // }\n\n    // // Convert date strings to Date\n    // // Check if Departure Date is after Return Date\n    // if (new Date(obj.data.departure_date) > new Date(obj.data.return_date)) {\n    //   this.validReqs.datesError = this.errMessages.datesError;\n    //   this.error = true;\n    // }\n\n  }\n}","<div class=\"container\">\n    <div class=\"row mb-5\">\n        <h1 class=\"text-left\">Edit Flight Schedule</h1>\n        <div class=\"table-responsive border p-4 bg-light rounded\">\n            <p class=\"text-left font-weight-bold\">Active Flight Schedule</p>\n            <ng-container *ngIf=\"submitted\">\n                <p class=\"text-center alert alert-success p-2 rounded\">\n                    Successfully Added!\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"error\">\n                <p class=\"text-center alert alert-danger p-2 rounded\">\n                    Sorry, something went wrong!\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"!submitted\">\n                <form [formGroup]=\"form\" (ngSubmit)=\"handleSubmit($event)\">\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Id:\n                                <ng-container *ngIf=\"validReqs.id.required\">*</ng-container>\n                            </label>\n                            <input name=\"id\" [class]=\"isValid('id', 'idExists')\" (keyup)=\"handleChange($event)\" type=\"number\" formControlName=\"id\" />\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.id.errors?.required || validReqs.id.error\">\n                                    {{errMessages.idError}}\n                                </div>\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.idExists\">\n                                    {{errMessages.idExists}}\n                                </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Flight No:\n                                <ng-container *ngIf=\"validReqs.flight_no.required\">*</ng-container>\n                            </label>\n                            <input name=\"flight_no\" [style.textTransform]=\"'uppercase'\" (keyup)=\"handleChange($event)\" [class]=\"isValid('flight_no')\" formControlName=\"flight_no\" maxlength=20/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.flight_no.errors?.required || form.controls.flight_no.errors?.minlength || validReqs.flight_no.error\">\n                                    {{errMessages.flight_noError}}\n                                </div>\n\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Airline:\n                                <ng-container *ngIf=\"validReqs.airline.required\">*</ng-container>\n                            </label>\n                        <input name=\"airline\" style=\"text-transform:capitalize\" (keyup)=\"handleChange($event)\" [class]=\"isValid('airline')\" formControlName=\"airline\" maxlength=25/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.airline.errors?.required || form.controls.airline.errors?.minlength\">\n                                    {{errMessages.airlineError}}\n                                </div>\n                                \n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Trip Type:\n                                <ng-container *ngIf=\"validReqs.trip_type.required\">*</ng-container>\n                            </label>\n                            <select name=\"trip_type\" (change)=\"handleChange($event)\" class=\"form-control\"\n                            formControlName=\"trip_type\">\n                                <option>One Way</option>\n                                <option>Round Trip</option>\n                                <option value=\"Multi\">Multiple Destinations</option>\n                            </select>                           \n                        </div>\n\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Departure Airport:\n                                <ng-container *ngIf=\"validReqs.departure_airport.required\">*</ng-container>\n                            </label>\n\n                            <input name=\"departure_airport\" (keyup)=\"handleChange($event)\" [style.textTransform]=\"'uppercase'\" [class]=\"isValid('departure_airport')\"\n                            formControlName=\"departure_airport\" maxlength=5/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.departure_airport.errors?.required || form.controls.departure_airport.errors?.minlength || validReqs.departure_airport.error\">\n                                    {{errMessages.departure_airportError}}\n                                </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Arrival Airport:\n                                <ng-container *ngIf=\"validReqs.arrival_airport.required\">*</ng-container>\n                            </label>\n                            <input name=\"arrival_airport\"  (keyup)=\"handleChange($event)\"  [style.textTransform]=\"'uppercase'\" [class]=\"isValid('arrival_airport','sameAirportError')\" formControlName=\"arrival_airport\" maxlength=5/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.arrival_airport.errors?.required || form.controls.arrival_airport.errors?.minlength || validReqs.arrival_airport.error\">\n                                    {{errMessages.arrival_airportError}}\n                                </div>\n                                \n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.sameAirportError\">\n                                    {{errMessages.sameAirportError}}\n                                </div>\n\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Departure Date:\n                                <ng-container *ngIf=\"validReqs.departure_date.required\">*</ng-container>\n                            </label>\n                            <input type=\"date\" (keyup)=\"handleChange($event)\" (change)=\"handleChange($event)\" name=\"departure_date\" [class]=\"isValid('departure_date')\"\n                            formControlName=\"departure_date\"/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.departure_date.errors?.required || form.controls.departure_date.errors?.minlength || validReqs.departure_date.error\">\n                                    {{errMessages.departure_dateError}}\n                                </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label>Return Date:\n                                <ng-container *ngIf=\"validReqs.return_date.required\">*</ng-container>\n                            </label>\n                            <input type=\"date\" (keyup)=\"handleChange($event)\" (change)=\"handleChange($event)\" name=\"return_date\" [class]=\"isValid('return_date','datesError')\"\n                            formControlName=\"return_date\"/>\n\n                                <div class=\"invalid-feedback\" *ngIf=\"form.controls.return_date.errors?.required || form.controls.return_date.errors?.minlength|| validReqs.return_date.error\">\n                                    {{errMessages.return_dateError}}\n                                </div>\n                                <div class=\"invalid-feedback\" *ngIf=\"validReqs.datesError\">\n                                    {{errMessages.datesError}}\n                                </div>\n                        </div>\n                    </div>\n\n                    <button (click)=\"handleSubmit($event)\" class=\"btn btn-primary btn-just-icon btn-lg\">\n                        Submit\n                    </button>\n                </form>\n            </ng-container>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FlightdataService } from 'src/app/services/flightdata.service';\nimport { IFlightData } from '../../services/flightdata.interface';\n\n\n@Component({\n  selector: 'app-flight-list',\n  templateUrl: './flight-list.component.html',\n  styles: []\n})\nexport class FlightListComponent implements OnInit {\n\n  // Inject Flightdata Service\n  constructor(private flightService: FlightdataService) { }\n\n  flights!: IFlightData; // The list of flights\n  show = true;  // show/hide table\n\n  // Count number of items in the list\n  //count = this.flightService.flightData.length;\n  count = 0;\n\n  /**\n   * Toggle show/hide table\n   * @param active - boolean true/fasle\n   */\n  isActive(active: boolean) {\n    this.show = active;\n  }\n\n  /**\n   * Lifecycle method\n   */\n  ngOnInit(): void {\n    this.reloadData();\n  }\n\n  /**\n   * Function to reload data from remote server and update count\n   */\n  reloadData(): void {\n    this.flightService.getAllFlights().subscribe(data => {\n      this.flights = data;\n      this.count = data.length;\n    });\n  }\n\n  /**\n   * Delete a single flight\n   * @param id - the id of a record\n   */\n  deleteFlight(id) {\n    this.flightService.deleteFlight(parseInt(id)).subscribe(data => {\n      console.log(data);\n\n      // Update count\n      //this.count = this.flightService.flightData.length;\n      this.reloadData();\n    });\n\n  }\n\n  /**\n   * Delete all flights\n   */\n  deleteAll() {\n    this.flightService.deleteAll().subscribe(data => {\n      console.log(data);\n      // Update count\n      //this.count = this.flightService.flightData.length;  \n      // Reset the flightData\n      this.reloadData();\n    });\n\n  }\n}\n","<div class=\"row\">\n  <h1 class=\"text-center\">Flight Schedule</h1>\n  <div class=\"table-responsive rounded bg-light p-4 my-4\">\n    <div class=\"mb-2\">\n      <p class=\"font-weight-bold\">Active Flight Schedule</p>\n      <p class=\"text-center alert alert-info p-2 rounded\" *ngIf=\"count > 0\">\n        {{ count }} Records\n        </p> \n    </div>\n    <table class=\"table table-hover\" *ngIf=\"show\">\n      <thead class=\"table-borderless table-secondary\">\n        <tr>\n          <th scope=\"col\">No.</th>\n          <th scope=\"col\">Airline</th>\n          <th scope=\"col\">Flight No.</th>\n          <th scope=\"col\">Trip Type</th>\n          <th scope=\"col\">Departure Airport</th>\n          <th scope=\"col\">Arrival Airport</th>\n          <th scope=\"col\">Departure Date</th>\n          <th scope=\"col\">Return Date</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let flight of flights\">\n          <td scope=\"row\">{{flight.id}}</td>\n          <td>{{flight.airline}}</td>\n          <td>{{flight.flight_no}}</td>\n          <td>{{flight.trip_type}}</td>\n          <td>{{flight.departure_airport}}</td>\n          <td>{{flight.arrival_airport}}</td>\n          <td>{{flight.departure_date}}</td>\n          <td>{{flight.return_date}}</td>\n          <td>\n            <a routerLink=\"/edit/{{flight.id}}\" type=\"button\" class=\"btn btn-success btn-sm text-white mr-2\">Edit</a>\n            <button (click)=\"deleteFlight(flight.id)\" type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p class=\"text-center alert alert-info p-2 rounded\" *ngIf=\"count == 0\">\n    No Data!\n    </p>  \n\n    <button (click)=\"deleteAll()\"\n            type=\"button\"\n            class=\"btn btn-lg btn-danger ml-2\">\n            Delete All\n    </button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent {\n\n}\n","  <!-- Footer -->\n  <footer class=\"py-5 bg-dark\">\n    <div class=\"container\">\n      <p class=\"m-0 text-center text-white\">Copyright &copy;2000 Flight App.  All rights reserved.</p>\n    </div>\n    <!-- /.container -->\n  </footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-5\">\n        <h1 class=\"text-center\">Welcome to Flight App</h1>\n        <div class=\"col-lg-12 bg-light border p-4 bg-light rounded\">\n            <p class=\"text-left\">\n                The Flight App is a small app created in Angular.\n            </p>\n            <span class=\"m-4\">\n            <a routerLink=\"/flights\">\n            <img width='40%' src=\"assets/images/table-shown.png\" alt=\"flight app image\"/>\n            </a>\n            </span>\n            <span class=\"m-4\">\n            <a routerLink=\"/add\">\n            <img width='50%' src=\"assets/images/add-flight.png\" alt=\"add flight app image\"/></a>\n            </span>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styles: []\n})\nexport class NavComponent {\n  navMenus = [\n    {\"url\":\"/\",\"text\":\"Home\",\"active\":true},\n    {\"url\":\"/about\",\"text\":\"About\",\"active\":false},\n    {\"url\":\"/flights\",\"text\":\"Flight List\",\"active\":false},\n    {\"url\":\"/add\",\"text\":\"Add Flight\",\"active\":false},\n  ]\n}\n","<!-- Navigation -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"/\">Flight App</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n          <ng-container *ngFor=\"let menu of navMenus\">\n            <li class=\"nav-item {{menu.active ? 'active' : ''}}\">\n              <a class=\"nav-link\" routerLink=\"{{menu.url}}\">{{menu.text}}\n                <span *ngIf=\"menu.active\" class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n        </ng-container>\n        </ul>\n      </div>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\n//import { FlightData } from '../models/FlightData';\nimport { api } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IFlightData } from './flightdata.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightdataService {\n\n  //flightData = FlightData;\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Get a single flight record\n   * @param id - the id of a record\n   * @returns - single flight object\n   */\n  getFlight(id:number): Observable<any>{\n    // let index = this.flightData.findIndex( e => e.id == id);\n    // return this.flightData[index];\n    return this.http.get(api + id);\n  }\n  \n  /**\n   * Get all flight records\n   * @returns - all records\n   */\n  getAllFlights(): Observable<any>{\n    // let index = this.flightData.findIndex( e => e.id == id);\n    // return this.flightData[index];\n    return this.http.get(api);\n  }\n\n  /**\n   * Add a new flight record\n   * @param newFlight - the new flight data\n   * @returns - the new flight data that was added\n   */\n  addFlight(newFlight: IFlightData){\n    //this.flightData.push(newFlight);\n    return this.http.post(api,newFlight);\n  }\n\n  /**\n   * Update a flight record\n   * @param id - the existing id of a record\n   * @param newFlight - the updated record\n   * @returns - the new updated record\n   */\n  updateFlight(id:number, newFlight:IFlightData): Observable<any>{\n    // let index = this.flightData.findIndex( e => e.id == id);\n    // this.flightData[index] = newFlight;\n    return this.http.put(api+id,newFlight);\n  }\n\n  /**\n   * Delete a single flight record\n   * @param id - the existing id of a record\n   * @returns - successful/failure of deletion\n   */\n  deleteFlight(id:number){\n    // let index = this.flightData.findIndex( e => e.id == id);\n    // if(index !== -1){\n    //   this.flightData.splice(index,1);\n    // }\n    return this.http.delete(api+id);\n  }\n\n  /**\n   * Delete all flight records\n   * @returns - successfull/failure message\n   */\n  deleteAll(){\n     // this.flightData = [];\n     return this.http.delete(api);\n  }\n\n}\n","\nexport class Util {\n\n    /**\n     * Validation requirements\n     */\n    validReqs = {\n        id: { required: true, min: 1, max: 99999, error: null },\n        flight_no: { required: true, min: 5, max: 10, error: null },\n        airline: { required: true, min: 2, max: 25, error: null },\n        trip_type: { required: true, error: null },\n        departure_airport: { required: true, min: 2, max: 5, error: null },\n        arrival_airport: { required: true, min: 2, max: 5, error: null },\n        departure_date: { required: true, error: null },\n        return_date: { required: true, error: null },\n        idExists: null,\n        sameAirportError: null,\n        datesError: null,\n    }\n\n    /**\n     * Error messages to display on the site\n     */\n    errMessages = {\n        idExists: \"This id already exists. Try again.\",\n        idError: \"Enter between 1 and 9999\",\n        flight_noError: \"Enter between 5-10 characters\",\n        airlineError: \"Enter between 2-25 characters\",\n        departure_airportError: \"Enter between 2-5 characters\",\n        arrival_airportError: \"Enter between 2-5 characters\",\n        sameAirportError: \"Arrival airport cannot be the same as Departure airport\",\n        departure_dateError: \"Departure Date is required\",\n        return_dateError: \"Return Date is required\",\n        datesError: 'Return Date cannot be earlier than Departure Date'\n    }\n\n    /**\n     * Validate all requirements at once\n     * @param val \n     */\n    validateAll(val) {\n        let obj = null;\n        if (val.action == 'add'){\n            obj = this.validateId(val)\n        }\n        obj = this.validateFlightNo(val)\n        obj = this.validateAirline(val)\n        obj = this.validateDepartureAirport(val)\n        obj = this.validateArrivalAirport(val)\n        obj = this.validateSameAirports(val)\n        obj = this.validateDepartureDate(val)\n        obj = this.validateReturnDate(val)\n        obj = this.vaildateInvalidDates(val)\n        return obj;\n    }\n\n    /**\n     * Function to validate flight id.  Checks for duplicates and number range\n     * @param val \n     */\n    validateId(val) {\n        if ((val.id !== val.data.id && val.action === 'edit') || val.action === 'add') {\n            // Extract the values for all id fields from full data set\n            let values = val.flightData.map(e => e.id);\n\n            // Check for unique id - if exists then try again\n            if (values.indexOf(val.data.id) !== -1) {\n                val.validReqs.idExists = val.errMessages.idExists;\n                val.error = true;\n            }\n\n            // Check if id is within number range\n            if (val.data.id < 1) {\n                val.validReqs.id.error = val.errMessages.idError;\n                val.error = true;\n            }\n        }\n    }\n\n    /**\n     * Check if Flight No is within character range\n     * @param val \n     */\n    validateFlightNo(val) {\n        if (val.data.flight_no.length < 5) {\n            val.validReqs.flight_no.error = val.errMessages.flight_noError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Function to validate airline name is within character range.\n     * @param val \n     */\n    validateAirline(val) {\n        if (val.data.airline.length < 2) {\n            val.validReqs.airline.error = val.errMessages.airlineError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Check if Departure Airport is within character range\n     * @param val \n     */\n    validateDepartureAirport(val) {\n        if (val.data.departure_airport.length < 2) {\n            val.validReqs.departure_airport.error = val.errMessages.departure_airportError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Check if Arrival Airport is within character range\n     * @param val \n     */\n    validateArrivalAirport(val) {\n        if (val.data.arrival_airport.length < 2) {\n            val.validReqs.arrival_airport.error = val.errMessages.arrival_airportError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Check if airports are same\n     * @param val \n     */\n    validateSameAirports(val) {\n        if (val.data.departure_airport !== '' && val.data.departure_airport === val.data.arrival_airport) {\n            val.validReqs.sameAirportError = val.errMessages.sameAirportError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Check if Departure Date is valid\n     * @param val \n     */\n    validateDepartureDate(val) {\n        if (val.data.departure_date.length === 0) {\n            val.validReqs.departure_date.error = val.errMessages.departure_dateError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Check if Return Date is valid\n     * @param val \n     */\n    validateReturnDate(val) {\n        if (val.data.return_date.length === 0) {\n            val.validReqs.return_date.error = val.errMessages.return_dateError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n     * Convert date strings to Date\n     * Check if Departure Date is after Return Date\n     * @param val \n     */\n    vaildateInvalidDates(val) {\n        if (new Date(val.data.departure_date) > new Date(val.data.return_date)) {\n            val.validReqs.datesError = val.errMessages.datesError;\n            val.error = true;\n        }\n        return val;\n    }\n\n    /**\n   * Function to get today's date\n   * @returns today's date \"mm/dd/yyyy\" format\n   */\n  getTodayDate() {\n    let today = new Date();\n    return today.toISOString().substring(0, 10);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\nexport const api = 'https://flightscheduler.herokuapp.com/flights/';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}